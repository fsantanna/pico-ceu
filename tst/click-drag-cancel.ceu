^["pico.ceu"]

pico-state-set-title("pico-Ceu: Click, Drag, or Cancel")

spawn {
    var rect :Rect = [[10,10],[5,5]]
    spawn {
        every :Pico.Draw {
            pico-state-set-color-clear([0,0,0,255])
            pico-output-draw-rect(rect)
        }
    }
    while true {
        await :Pico.Mouse.Button.Dn, pico-point-vs-rect?(evt.pos,rect)
        println("> clicking...")
        var orig  :Rect = copy(rect)
        var click :XY   = copy(evt.pos)
        par-or {
            await :Pico.Key.Dn, (evt.key == :Key-Escape)
            set rect = copy(orig)
            println("<<< Cancelled!")
        } with {
            await :Pico.Mouse.Motion
            println("> dragging...")
            awaiting :Pico.Mouse.Button.Up {
                while true {
                    set rect.pos.x = orig.pos.x + (evt.pos.x - click.x)
                    set rect.pos.y = orig.pos.y + (evt.pos.y - click.y)
                    await :Pico.Mouse.Motion
                }
            }
            println("<<< Dragged!")
        } with {
            await :Pico.Mouse.Button.Up
            println("<<< Clicked!")
        }
    }
}

pico-loop()
