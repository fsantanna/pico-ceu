^["@/pico/pico.ceu"]

pico-state-set-size([810,610])
pico-state-set-title("pico-Ceu: Click, Drag, or Cancel")
pico-state-set-font("tiny.ttf", 10)

spawn {
    var text = " "
    var rect :Rect = [[0,0],[10,10]]
    spawn {
        every :Pico.Draw {
            pico-output-draw-rect(rect)
            pico-output-draw-text([0,-20], text)
        }
    }
    loop {
        await :Pico.Mouse.Button.Dn, pico-point-vs-rect?(evt.pos,rect)
        set text = "... clicking ..."
        val orig  :Rect = copy(rect)
        val click :XY   = copy(evt.pos)
        par-or {
            await :Pico.Key.Dn, (evt.key == :Key-Escape)
            set rect = copy(orig)
            set text = "!!! CANCELLED !!!"
        } with {
            await :Pico.Mouse.Motion
            set text = "... dragging ..."
            awaiting :Pico.Mouse.Button.Up {
                loop {
                    set rect.pos.x = orig.pos.x + (evt.pos.x - click.x)
                    set rect.pos.y = orig.pos.y + (evt.pos.y - click.y)
                    await :Pico.Mouse.Motion
                }
            }
            set text = "!!! DRAGGED !!!"
        } with {
            await :Pico.Mouse.Button.Up
            set text = "!!! CLICKED !!!"
        }
    }
}

pico-loop()
