^["@/pico/pico.ceu"]

pico.set.title("pico-Ceu: Click, Drag, or Cancel")
pico.set.font("tiny.ttf", 8)

spawn {
    var text = " "
    var rect :Rect = [pico.pct-to-pos(1/2,1/2), [10,10]]
    spawn {
        every :Pico.Draw {
            pico.output.draw.rect(rect)
            pico.output.draw.text(pico.pct-to-pos(1/2,5/6), text)
        }
    }
    loop {
        val click :XY = await(:Pico.Mouse.Button.Dn | pico.point-vs-rect?(it.pos,rect)) {
            copy(it.pos)
        }
        val orig :Rect = copy(rect)
        set text = "... clicking ..."
        par-or {
            await(:Pico.Key.Dn | it.key==:Key-Escape)
            set rect = copy(orig)
            set text = "!!! CANCELLED !!!"
        } with {
            await(:Pico.Mouse.Motion)
            set text = "... dragging ..."
            watching :Pico.Mouse.Button.Up {
                every :Pico.Mouse.Motion {
                    set rect.pos.x = orig.pos.x + (it.pos.x - click.x)
                    set rect.pos.y = orig.pos.y + (it.pos.y - click.y)
                }
            }
            set text = "!!! DRAGGED !!!"
        } with {
            await(:Pico.Mouse.Button.Up)
            set text = "!!! CLICKED !!!"
        }
    }
}

pico.loop()
