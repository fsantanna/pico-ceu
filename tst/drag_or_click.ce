#include "int.ce"
#include "pico.ce"

var rect: Rect = [xy,wh]
    where {
        var xy: Point = [_10,_10]
        var wh: Dims  = [_5,_5]
    }

spawn {
    loop {
        var dxy: Point
        await evt?UMouseButtonDown until isPointInsideRect[mouse,rect]
            where {
                var mouse = evt!UMouseButtonDown.2
                set dxy = [ sub [rect.1.1,mouse.1], sub [rect.1.2,mouse.2] ]
            }
        paror {
            var orig = rect
            await evt?UKeyDown
            set rect = orig
            output std _("Cancelled!"):_(char*)
        } with {
            await evt?UMouseMotion
            output std _("Dragging..."):_(char*)
            var mouse = evt!UMouseMotion
            paror {
                await evt?UMouseButtonUp
                output std _("Dropped!"):_(char*)
            } with {
                loop {
                    set rect = [pt, rect.2]
                        where {
                            var pt: Point = [ add [mouse.1,dxy.1], add [mouse.2,dxy.2] ]
                        }
                    await evt?UMouseMotion
                    set mouse = evt!UMouseMotion
                }
            }
        } with {
            await evt?UMouseButtonUp
            output std _("Clicked!"):_(char*)
        }
    }
}

spawn {
    loop {
        await _1
        output pico <.UClear>: TPico
        output pico <.UDraw_Rect rect>: TPico
        output pico <.UPresent>: TPico
    }
}

call pico_loop ()
