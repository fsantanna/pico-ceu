native {
    pico_init(1);
}
;; TODO: native { pico_init(0); }

;; INPUT

var ceu_input_event
set ceu_input_event = func (type) {
    var tp
    var v1
    var v2
    var v3
    native {
        SDL_Event evt;
        pico_input_event(&evt,$type);
        $tp = evt.type;
        switch (evt.type) {
            case SDL_KEYDOWN:
                $v1 = evt.key.state;
                $v2 = evt.key.keysym.sym;
                break;
            case SDL_MOUSEBUTTONDOWN:
                $v1 = evt.button.button;
                $v2 = evt.button.x;
                $v3 = evt.button.y;
                break;
        }
    }
    [tp,v1,v2,v3]
}

;; OUTPUT

var ceu_output_draw_pixel
set ceu_output_draw_pixel = func (x,y) {
    native {
        pico_output_draw_pixel((SDL_Point){$x,$y});
    }
}

var ceu_input_delay
set ceu_input_delay = func (ms) {
    native {
        pico_input_delay($ms);
    }
}

;; STATE

var ceu_state_set_color_draw
set ceu_state_set_color_draw = func (r,g,b,a) {
    native {
        pico_state_set_color_draw((SDL_Color){$r,$g,$b,$a});
    }
}
